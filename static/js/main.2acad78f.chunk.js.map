{"version":3,"sources":["redux/reducers/reducers.js","redux/actions/actions.js","helpers/isEmpty.js","helpers/movieAPI.js","components/ReusableComponents/alert-view/alert-view.jsx","components/User/registration-view/registration-view.jsx","components/ReusableComponents/modal/reusable-modal.jsx","components/User/registration-view/registration-modal.jsx","components/User/login-view/login-view.jsx","components/User/login-view/login-modal.jsx","components/LandingPages/welcome-view/welcome-view.jsx","components/Movie/director-view/director-view.jsx","components/Movie/genre-view/genre-view.jsx","helpers/placeholder.js","components/Movie/movie-view/movie-view.jsx","components/Movie/movie-card/movie-card.jsx","components/GlobalComponents/sort-column-dropdown.jsx","components/Movie/movies-list/movies-list.jsx","components/User/profile-view/favorite-movies-view.jsx","components/User/profile-view/profile-view.jsx","components/Users/users-list.jsx","components/GlobalComponents/visibility-filter-input.jsx","components/GlobalComponents/global-navbar.jsx","components/GlobalComponents/footer.jsx","components/LandingPages/main-view/main-view.jsx","App.js","serviceWorker.js","index.js"],"names":["moviesApp","combineReducers","visibilityFilter","state","arguments","length","undefined","action","type","value","sortColumn","movies","user","users","isEmpty","Object","keys","trim","token","localStorage","getItem","movieApi","AlertView","_ref","position","variant","children","react_default","a","createElement","Alert_default","style","bottom","right","RegistrationView","props","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","username","setUsername","_useState5","_useState6","email","setEmail","_useState7","_useState8","birthday","setBirthday","_useState9","_useState10","password","setPassword","_useState11","_useState12","confirmPassword","setConfirmPassword","_useState13","_useState14","validate","setValidation","_useState15","_useState16","error","setError","_useState17","_useState18","success","setSuccess","_useState19","_useState20","errorValidate","setErrorValidation","Form_default","noValidate","validated","onSubmit","e","preventDefault","currentTarget","checkValidity","stopPropagation","axios","post","Username","Password","Email","Birthday","then","response","statusText","setTimeout","data","concat","onRegister","catch","errorResponse","errors","msg","param","console","log","handleSubmit","Group","controlId","Label","Control","placeholder","onChange","target","isInvalid","borderColor","required","Feedback","Text","className","alert_view","Button_default","disabled","includes","Spinner_default","as","animation","size","role","aria-hidden","ReusableModal","Modal_default","show","onHide","aria-labelledby","centered","Header","closeButton","Title","id","heading","Body","Footer","onClick","RegistrationModal","Fragment","onModalShow","reusable_modal_ReusableModal","modalShow","onModalClose","registration_view_RegistrationView","LoginView","onLoggedIn","errorMessage","message","LoginModal","login_view_LoginView","WelcomeView","Jumbotron_default","ButtonToolbar_default","login_modal_LoginModal","login","registration_modal_RegistrationModal","register","react_router_dom","to","DirectorView","Director","movie","Card_default","Name","Bio","Birth","window","history","back","GenreView","Genre","Description","unsplashPlaceholder","MovieView","color","Media_default","width","height","src","ImagePath","alt","MovieCard","border","marginBottom","_id","ReleaseYear","actions","setSortColumn","sortColumnsBy","connect","DropdownButton_default","drop","alignRight","title","onSelect","textAlign","map","name","Dropdown_default","Item","key","eventKey","moviesToShow","sort","b","filter","obj","entries","toLowerCase","Row_default","Col_default","sort_column_dropdown","CardColumns_default","movie_card_MovieCard","FavoriteMoviesView","Img","ProfileView","delete","headers","Authorization","deleteUser","res","removeItem","_this2","this","_this$props$user","FavoriteMovies","ListGroup_default","ListGroupItem_default","onHandleUserDelete","Link","href","favorite_movies_view_FavoriteMoviesView","Component","UserList","setFilter","inline","FormControl_default","GlobalNavbar","onLoggedOut","Navbar_default","collapseOnSelect","expand","bg","sticky","Brand","Toggle","aria-controls","Collapse","Nav_default","NavLink","exact","NavDropdown_default","Divider","visibility_filter_input","aria-label","setMovies","setUser","setUsers","MainView","selectedMovie","toastMessage","authData","_this","setState","setItem","getMovies","getUsers","location","component","accessToken","getUser","_context","t0","get","status","_context2","_context3","_context4","_this$state","_this$props","Container_default","global_navbar_GlobalNavbar","react_router","path","render","welcome_view_WelcomeView","movies_list","_ref2","match","movie_view_MovieView","find","m","params","movieId","_ref3","director_view_DirectorView","_ref4","genre_view_GenreView","users_list","_ref5","profile_view_profile_view","u","footer","store","createStore","App","es","main_view_main_view","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2acad78f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  SET_FILTER,\n  SET_SORT_COLUMN,\n  SET_MOVIES,\n  SET_USER,\n  SET_USERS\n} from '../actions/actions';\n\nconst visibilityFilter = (state = '', action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst sortColumn = (state = 'Title', action) => {\n  switch (action.type) {\n    case SET_SORT_COLUMN:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst movies = (state = [], action) => {\n  switch (action.type) {\n    case SET_MOVIES:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\n// combined reducer\n// const moviesAppWithoutRedux = (state = {}, action) => {\n//   return {\n//     visibilityFilter: visibilityFilter(state.visibilityFilter, action),\n//     sortColumn: sortColumn(state.sortColumn, action),\n//     movies: movies(state.movies, action)\n//   };\n// };\n\nconst moviesApp = combineReducers({\n  visibilityFilter,\n  sortColumn,\n  movies,\n  user,\n  users\n});\n\nexport default moviesApp;\n","const SET_MOVIES = 'SET_MOVIES';\nconst SET_FILTER = 'SET_FILTER';\nconst SET_SORT_COLUMN = 'SET_SORT_COLUMN';\nconst SET_USER = 'SET_USER';\nconst SET_USERS = 'SET_USERS';\n\nconst setMovies = value => ({\n  type: SET_MOVIES,\n  value\n});\n\nconst setFilter = value => ({ type: SET_FILTER, value });\n\nconst setSortColumn = value => ({ type: SET_SORT_COLUMN, value });\n\nconst setUser = value => ({ type: SET_USER, value });\n\nconst setUsers = value => ({ type: SET_USERS, value });\n\nexport {\n  SET_MOVIES,\n  SET_FILTER,\n  SET_SORT_COLUMN,\n  SET_USER,\n  SET_USERS,\n  setMovies,\n  setFilter,\n  setSortColumn,\n  setUser,\n  setUsers\n};\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nexport { isEmpty };\n","import axios from 'axios';\n\nlet token = localStorage.getItem('token');\n\nconst movieApi = {\n  login: 'https://my-flix-db-11209.herokuapp.com/login',\n  user: 'https://my-flix-db-11209.herokuapp.com/user',\n  movies: 'https://my-flix-db-11209.herokuapp.com/movies',\n  users: 'https://my-flix-db-11209.herokuapp.com/users'\n};\n\nconst deleteUser = (username) => {\n  axios.delete(`${movieApi['user']}/${username}`, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n}\n\nexport { movieApi, deleteUser };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/\nconst AlertView = ({ position, variant, children }) => {\n  // useEffect(() => {\n  //   if (autohide && show) {\n  //     const timer = setTimeout(() => {\n  //       onClose();\n  //     }, delay);\n  //     return () => {\n  //       clearTimeout(timer);\n  //     };\n  //   }\n  //   return () => null;\n  // }, [autohide, show]);\n  if (position === 'absolute') {\n    return (\n      <Alert\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          right: 0\n        }}\n        variant={variant}\n      >\n        {children}\n      </Alert>\n    );\n  }\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nAlertView.propTypes = {\n  variant: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'light',\n    'dark'\n  ]).isRequired,\n  children: PropTypes.any.isRequired\n};\n\nexport default AlertView;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { movieApi } from '../../../helpers/movieAPI';\nimport AlertView from '../../ReusableComponents/alert-view/alert-view';\n\nconst RegistrationView = props => {\n  // console.log('RegistrationView', props);\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [validate, setValidation] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [errorValidate, setErrorValidation] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidation(true);\n    setLoading(true);\n\n    axios\n      .post(movieApi['user'], {\n        Username: username,\n        Password: password,\n        Email: email,\n        Birthday: birthday\n      })\n      .then(response => {\n        if (response.statusText === 'Created') {\n          setTimeout(() => setLoading(false), 1000);\n          setErrorValidation('');\n          setError('');\n          const data = response.data;\n          setSuccess(\n            `🎉 Hey ${\n              data.Username\n            }, you registered successfully, please login!`\n          );\n          setTimeout(() => props.onRegister(username), 5000);\n        }\n      })\n      .catch(error => {\n        let errorResponse = error.response.data.errors[0];\n        const { msg, param, value } = errorResponse;\n        if (errorResponse) {\n          setLoading(false);\n          setErrorValidation(param);\n          setError(`\n            ${msg}\n            [${param}: ${value}]\n          `);\n        }\n        console.log('Error', errorResponse);\n      });\n    // .finally(() => setTimeout(() => props.onHide(), 5000));\n  };\n\n  return (\n    <Form noValidate validated={validate} onSubmit={e => handleSubmit(e)}>\n      <Form.Group controlId=\"formBasicEmailRegister\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          isInvalid={errorValidate === 'Email'}\n          style={{ borderColor: errorValidate === 'Email' && '#dc3545' }}\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please use an email.\n        </Form.Control.Feedback>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicUsernameRegister\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"username\"\n          placeholder=\"Enter username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n          isInvalid={errorValidate === 'Username'}\n          style={{ borderColor: errorValidate === 'Username' && '#dc3545' }}\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please choose a username.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicBirthdayRegister\">\n        <Form.Label>Birthday</Form.Label>\n        <Form.Control\n          type=\"date\"\n          value={birthday}\n          onChange={e => setBirthday(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPasswordRegister\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a password.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicConfirmPasswordRegister\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={e => setConfirmPassword(e.target.value)}\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please confirm password.\n        </Form.Control.Feedback>\n        {password !== confirmPassword && (\n          <AlertView variant=\"warning\">\n            Confirm password and password do not match.\n          </AlertView>\n        )}\n      </Form.Group>\n      {/* <Form.Group controlId=\"formBasicChecboxRegister\">\n        <Form.Check type=\"checkbox\" label=\"Sign me up for weekly newsletter\" />\n      </Form.Group> */}\n\n      <Button\n        variant={\n          !username || !email || !password\n            ? 'outline-secondary'\n            : 'outline-primary'\n        }\n        type=\"submit\"\n        disabled={\n          !username ||\n          !email ||\n          !password.includes(confirmPassword) ||\n          password !== confirmPassword ||\n          success || loading\n        }\n      >\n        {loading\n          ? (\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            ) && 'Hold please ...'\n          : 'Register' }\n      </Button>\n      {error && <AlertView variant=\"danger\">{error}</AlertView>}\n      {success && <AlertView variant=\"success\">{success}</AlertView>}\n    </Form>\n  );\n};\n\nexport { RegistrationView };\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst ReusableModal = props => {\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.heading}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.children}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport { ReusableModal };\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { RegistrationView } from './registration-view';\nimport { ReusableModal } from '../../ReusableComponents/modal/reusable-modal';\n\nconst RegistrationModal = props => {\n  // console.log('RegistrationModal', props);\n  return (\n    <>\n      <Button variant=\"outline-dark\" onClick={props.onModalShow}>\n        Register\n      </Button>\n      <ReusableModal\n        show={props.modalShow}\n        onHide={props.onModalClose}\n        heading=\"Registration\"\n      >\n        <RegistrationView\n          onRegister={props.onRegister}\n          onHide={props.onModalClose}\n        />\n      </ReusableModal>\n    </>\n  );\n};\n\nexport { RegistrationModal };\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport { movieApi } from '../../../helpers/movieAPI';\nimport { isEmpty } from '../../../helpers/isEmpty';\nimport AlertView from '../../ReusableComponents/alert-view/alert-view';\n\nconst LoginView = props => {\n  // console.log('LoginView', props);\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [validate, setValidation] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidation(true);\n    setLoading(true);\n\n    axios\n      .post(movieApi['login'], {\n        Username: username,\n        Password: password\n      })\n      .then(response => {\n        const data = response.data;\n        setTimeout(() => setLoading(false), 1000);\n        setTimeout(() => props.onLoggedIn(data), 1000);\n      })\n      .catch(e => {\n        setLoading(false);\n        console.log(e.response);\n        let errorMessage = e.response.data.message;\n        setError(errorMessage);\n      });\n  };\n\n  return (\n    <Form noValidate validated={validate} onSubmit={e => handleSubmit(e)}>\n      <Form.Group controlId=\"formBasicEmailLogin\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"username\"\n          placeholder=\"Enter username\"\n          value={username}\n          onChange={e => setUsername(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a Username.\n        </Form.Control.Feedback>\n        {!isEmpty(error) && error.includes('Username') && (\n          <AlertView variant=\"danger\">{error}</AlertView>\n        )}\n        <Form.Text className=\"text-muted\">\n          We'll never share your username/email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPasswordLogin\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide your password.\n        </Form.Control.Feedback>\n        {!isEmpty(error) && error.includes('Password') && (\n          <AlertView variant=\"danger\">{error}</AlertView>\n        )}\n      </Form.Group>\n      <Button\n        variant={\n          !username || !password ? 'outline-secondary' : 'outline-primary'\n        }\n        type=\"submit\"\n        disabled={!username || !password || loading}\n      >\n        {loading\n          ? (\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            ) && 'Hold please ...'\n          : 'Login'}\n      </Button>\n    </Form>\n  );\n};\n\nexport { LoginView };\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { LoginView } from './login-view';\nimport { ReusableModal } from '../../ReusableComponents/modal/reusable-modal';\n\nconst LoginModal = props => {\n  // console.log('LoginModal', props);\n  return (\n    <>\n      <Button variant=\"outline-primary\" onClick={props.onModalShow}>\n        Login\n      </Button>\n      <ReusableModal\n        show={props.modalShow}\n        onHide={props.onModalClose}\n        heading=\"Login\"\n      >\n        <LoginView onLoggedIn={props.onLoggedIn} />\n      </ReusableModal>\n    </>\n  );\n};\n\nexport { LoginModal };\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../../helpers/isEmpty';\nimport { RegistrationModal } from '../../User/registration-view/registration-modal';\nimport { LoginModal } from '../../User/login-view/login-modal';\n\nconst WelcomeView = ({\n  user,\n  modalShow,\n  onModalClose,\n  onModalShow,\n  onRegister,\n  onLoggedIn\n}) => {\n  return (\n    <Jumbotron>\n      <h1>Welcome to movie.db</h1>\n      <p>\n        Hack up furballs rub butt on table stretch, and lick butt. Go into a\n        room to decide you didn't want to be in there anyway put butt in owner's\n        face mesmerizing birds. Hiding behind the couch until lured out by a\n        feathery toy meowing non stop for food. Scratch the box annoy the old\n        grumpy cat, start a fight and then retreat to wash when i lose but nya\n        nya nyan but get scared by sudden appearance of cucumber rub face on\n        everything, so purr when being pet. Sweet beast. Stare at wall turn and\n        meow stare at wall some more meow again continue staring . Sniff other\n        cat's butt and hang jaw half open thereafter go into a room to decide\n        you didn't want to be in there anyway but meow meow mama. Dream about\n        hunting birds meowwww, but stand with legs in litter box, but poop\n        outside.\n      </p>\n\n      {isEmpty(user) ? (\n        <ButtonToolbar>\n          <LoginModal\n            onModalShow={onModalShow('login')}\n            modalShow={modalShow.login}\n            onModalClose={onModalClose('login')}\n            onLoggedIn={user => onLoggedIn(user)}\n          />\n          <div className=\"mr-2\" />\n          <RegistrationModal\n            onModalShow={onModalShow('register')}\n            modalShow={modalShow.register}\n            onModalClose={onModalClose('register')}\n            onRegister={user => onRegister(user)}\n          />\n        </ButtonToolbar>\n      ) : (\n        <Link to={`/movies`}>\n          <Button variant=\"outline-primary\">View Movies</Button>\n        </Link>\n      )}\n    </Jumbotron>\n  );\n};\n\nWelcomeView.propTypes = {\n  user: PropTypes.any,\n  modalShow: PropTypes.object.isRequired,\n  onModalClose: PropTypes.func.isRequired,\n  onModalShow: PropTypes.func.isRequired,\n  onRegister: PropTypes.func.isRequired,\n  onLoggedIn: PropTypes.func.isRequired\n};\n\nexport { WelcomeView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import { Link } from 'react-router-dom';\n\nconst DirectorView = ({ movie }) => {\n  const { Director } = movie;\n\n  const goBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <Card>\n      <Card.Header as=\"h5\">Director</Card.Header>\n      <Card.Body>\n        <Card.Title>{Director.Name}</Card.Title>\n        <Card.Text>{Director.Bio}</Card.Text>\n        <Card.Text>{Director.Birth}</Card.Text>\n        <Button variant=\"outline-dark\" onClick={goBack}>\n          Back\n        </Button>\n      </Card.Body>\n      <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\n    </Card>\n  );\n};\n\nDirectorView.propTypes = {\n  movie: PropTypes.shape({\n    Director: PropTypes.object\n  }).isRequired\n};\nexport { DirectorView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import { Link } from 'react-router-dom';\n\nconst GenreView = ({ movie }) => {\n  const { Genre } = movie;\n  const goBack = () => {\n    window.history.back();\n  };\n  return (\n    <Card>\n      <Card.Header as=\"h5\">Genre</Card.Header>\n      <Card.Body>\n        <Card.Title>{Genre.Name}</Card.Title>\n        <Card.Text>{Genre.Description}</Card.Text>\n        <Button variant=\"outline-dark\" onClick={goBack}>\n          Back\n        </Button>\n      </Card.Body>\n\n      <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\n    </Card>\n  );\n};\n\nGenreView.propTypes = {\n  movie: PropTypes.shape({\n    Genre: PropTypes.object\n  }).isRequired\n};\nexport { GenreView };\n","const placeholder = (size, color) =>\n  `https://via.placeholder.com/${size}/${color}`;\n\nconst unsplashPlaceholder = (size = '1024x300', type) =>\n  `https://source.unsplash.com/random/${size}?${type}`;\n\nexport { placeholder, unsplashPlaceholder };\n","import React from 'react';\nimport Media from 'react-bootstrap/Media';\nimport Button from 'react-bootstrap/Button';\nimport { isEmpty } from '../../../helpers/isEmpty';\nimport { placeholder } from '../../../helpers/placeholder';\n\nconst MovieView = ({ movie }) => {\n  if (isEmpty(movie)) return <p>loading movie...</p>;\n  const goBack = () => {\n    window.history.back();\n  };\n  return (\n    <>\n      <Media>\n        <img\n          width={64}\n          height={64}\n          className=\"mr-3\"\n          src={placeholder('100', '000000') || movie.ImagePath}\n          alt=\"movie poster placeholder\"\n        />\n        <Media.Body>\n          <h5>{movie.Title}</h5>\n          <p>\n            {movie.Description}\n            {/* <p>{movie.Director.Name}</p> <p>{movie.Genre.Name}</p> */}\n          </p>\n        </Media.Body>\n      </Media>\n      <Button variant=\"outline-dark\" onClick={goBack}>\n        Back\n      </Button>\n    </>\n  );\n};\n\nexport { MovieView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <Card border=\"info\">\n      <Card.Header as=\"h5\">{movie.Title}</Card.Header>\n      <Card.Body>\n        <Link to={`/directors/${movie.Director.Name}`}>\n          <Card.Text style={{ marginBottom: '5%' }}>\n            {movie.Director.Name}\n          </Card.Text>\n        </Link>\n        <Card.Text style={{ marginBottom: '0' }}>{movie.Description}</Card.Text>\n        <Link to={`/genres/${movie.Genre.Name}`}>\n          <Card.Text style={{ marginBottom: '5%' }}>\n            <small className=\"text-muted\">#{movie.Genre.Name}</small>\n          </Card.Text>\n        </Link>\n        <Link to={`/movies/${movie._id}`}>\n          <Button variant=\"outline-dark\">Read more</Button>\n        </Link>\n      </Card.Body>\n      <Card.Footer>\n        {/* <small className=\"text-muted\">Last updated 3 mins ago</small> */}\n        <small className=\"text-muted\">Released: {movie.ReleaseYear}</small>\n      </Card.Footer>\n      {/* <Card.Header>\n        <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\n          <Nav.Item>\n            <Nav.Link href=\"#first\">Active</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"#link\">Link</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"#disabled\" disabled>\n              Disabled\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Card.Header> */}\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string\n  }).isRequired\n};\nexport { MovieCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\nimport { setSortColumn } from '../../redux/actions/actions';\n\nconst actions = {\n  setSortColumn\n};\n\nconst sortColumnsBy = [\n  'Title',\n  'Description',\n  'Director',\n  'Genre',\n  'ReleaseYear'\n];\n\nconst SortColumnDropdown = props => {\n  return (\n    <DropdownButton\n      drop={'left'}\n      alignRight={false}\n      size=\"sm\"\n      variant=\"outline-secondary\"\n      className=\"mb-1\"\n      id=\"dropdown-item-button\"\n      title=\"Sort by\"\n      onSelect={e => props.setSortColumn(e)}\n      style={{ textAlign: 'right' }}\n    >\n      {sortColumnsBy.map(name => (\n        <Dropdown.Item key={name} eventKey={name} as=\"button\">\n          {name}\n        </Dropdown.Item>\n      ))}\n    </DropdownButton>\n  );\n};\n\nSortColumnDropdown.propTypes = {\n  setSortColumn: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  actions\n)(SortColumnDropdown);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { MovieCard } from '../movie-card/movie-card';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport PropTypes from 'prop-types';\nimport SortColumnDropdown from '../../GlobalComponents/sort-column-dropdown';\n\nconst getFirstKeyValueOfNestedObj = obj => Object.entries(obj)[0][1];\n\n// mapStateToProps\nconst mapState = state => {\n  const { movies, visibilityFilter, sortColumn } = state;\n\n  let moviesToShow = movies.concat().sort((a, b) => {\n    if (a[sortColumn] < b[sortColumn]) return -1;\n    if (a[sortColumn] > b[sortColumn]) return 1;\n    return 0;\n  });\n\n  // filter search according to sortColumn result.\n  if (visibilityFilter !== '') {\n    moviesToShow = moviesToShow.filter(movie => {\n      if (typeof movie[sortColumn] === 'object') {\n        return getFirstKeyValueOfNestedObj(movie[sortColumn])\n          .toLowerCase()\n          .includes(visibilityFilter);\n      }\n      return (\n        movie[sortColumn].includes(visibilityFilter) ||\n        movie[sortColumn].toLowerCase().includes(visibilityFilter)\n      );\n    });\n  }\n  return { movies: moviesToShow };\n};\n\nconst MoviesList = props => {\n  const { movies } = props;\n\n  if (!movies) return <p>loading...</p>;\n  return (\n    <Row>\n      <Col>\n        <SortColumnDropdown />\n        <CardColumns>\n          {movies.map(movie => {\n            return <MovieCard movie={movie} key={movie._id} />;\n          })}\n        </CardColumns>\n      </Col>\n    </Row>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired\n};\n\n// Notes:\n// The first argument, mapStateToProps, is a function that converts or transforms the store into props that the MoviesList component will use. Remember that the store contains your application's state, which is why this function is called mapStateToProps.\nexport default connect(mapState)(MoviesList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n// import Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport { unsplashPlaceholder } from '../../../helpers/placeholder';\n// import { isEmpty } from '../../../helpers/isEmpty';\n\nconst FavoriteMoviesView = ({ movie }) => {\n  return (\n    <Card border=\"dark\">\n      <Card.Img variant=\"top\" src={unsplashPlaceholder('', movie.Title)} />\n      <Card.Header as=\"h5\">{movie.Title}</Card.Header>\n      <Card.Body>\n        <Link to={`/directors/${movie.Director.Name}`}>\n          <Card.Text style={{ marginBottom: '5%' }}>\n            {movie.Director.Name}\n          </Card.Text>\n        </Link>\n        <Card.Text style={{ marginBottom: '0' }}>{movie.Description}</Card.Text>\n        <Link to={`/genres/${movie.Genre.Name}`}>\n          <Card.Text style={{ marginBottom: '5%' }}>\n            <small className=\"text-muted\">#{movie.Genre.Name}</small>\n          </Card.Text>\n        </Link>\n        <Link to={`/movies/${movie._id}`}>\n          <Button variant=\"outline-dark\">Read more</Button>\n        </Link>\n      </Card.Body>\n      <Card.Footer>\n        {/* <small className=\"text-muted\">Last updated 3 mins ago</small> */}\n        <small className=\"text-muted\">Released: {movie.ReleaseYear}</small>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nFavoriteMoviesView.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string\n  }).isRequired\n};\nexport { FavoriteMoviesView };\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\nimport './profile-view.scss';\nimport { unsplashPlaceholder } from '../../../helpers/placeholder';\nimport { deleteUser } from '../../../helpers/movieAPI';\nimport { isEmpty } from '../../../helpers/isEmpty';\nimport { FavoriteMoviesView } from './favorite-movies-view';\n\nclass ProfileView extends Component {\n  state = {};\n\n  onHandleUserDelete(username) {\n    deleteUser(username)\n      .then(res => {\n        console.log(res);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    if (isEmpty(this.props.user)) return 'Loading user profile...';\n    const {\n      user: { Username, Email, FavoriteMovies }\n    } = this.props;\n    return (\n      <div>\n        <Card>\n          <Card.Img\n            variant=\"top\"\n            src={unsplashPlaceholder('1024x300', 'nature')}\n          />\n          <Card.Body>\n            <Card.Title>{Username}</Card.Title>\n            <Card.Text>{Email}</Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>Cras justo odio</ListGroupItem>\n            <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n            <ListGroupItem>Vestibulum at eros</ListGroupItem>\n          </ListGroup>\n          <Card.Body>\n            <Button\n              variant=\"danger\"\n              onClick={() => this.onHandleUserDelete(Username)}\n            >\n              Delete Account\n            </Button>\n            <Card.Link href=\"#\">Another Link</Card.Link>\n          </Card.Body>\n        </Card>\n        <CardColumns>\n          {!isEmpty(FavoriteMovies)\n            ? FavoriteMovies.map(movie => {\n                return <FavoriteMoviesView movie={movie} key={movie._id} />;\n              })\n            : 'Add some movies to your favorites list.'}\n        </CardColumns>\n      </div>\n    );\n  }\n}\n\nexport default ProfileView;\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n\nclass UserList extends Component {\n  state = {};\n\n  render() {\n    const { users } = this.props;\n    // console.log(users);\n    if (!users) return null;\n    return (\n      <>\n        <h1>Users list route</h1>\n        {users.map(user => (\n          <div key={user._id}>\n            <ul>\n              <li>{user.Username}</li>\n              <li>{user.Email}</li>\n            </ul>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default UserList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { setFilter } from '../../redux/actions/actions';\n\nconst actions = {\n  setFilter\n};\n\nconst mapState = ({ visibilityFilter, sortColumn }) => ({\n  visibilityFilter,\n  sortColumn\n});\n\nconst VisibilityFilterInput = props => {\n  return (\n    <Form inline>\n      <FormControl\n        onChange={e => props.setFilter(e.target.value)}\n        value={props.visibilityFilter}\n        type=\"text\"\n        placeholder={`Search by ${props.sortColumn}`}\n        className=\"mr-sm-2\"\n      />\n    </Form>\n  );\n};\n\nVisibilityFilterInput.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  visibilityFilter: PropTypes.string.isRequired\n};\n\nexport default connect(\n  mapState,\n  actions\n)(VisibilityFilterInput);\n","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\nimport { Link, NavLink } from 'react-router-dom';\nimport VisibilityFilterInput from './visibility-filter-input';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from '../../helpers/isEmpty';\n\nimport './global.scss';\n\nconst GlobalNavbar = ({ user, onLoggedOut }) => {\n  return (\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"007bff-outline\"\n      variant=\"light\"\n      sticky=\"top\"\n    >\n      <Navbar.Brand>\n        <Link to={`/myFlixApp`}>Home</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        {!isEmpty(user) && (\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={NavLink} to={`/users`} exact>\n              People\n            </Nav.Link>\n            <NavDropdown\n              title={`👤 ${user.Username}`}\n              id=\"collasible-nav-dropdown\"\n            >\n              <NavDropdown.Item\n                as={NavLink}\n                to={`/profile/${user.Username}`}\n                exact\n              >\n                Profile\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Favorites</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n              <NavDropdown.Divider />\n              {!isEmpty(user) && (\n                <NavDropdown.Item onClick={onLoggedOut}>\n                  Log out\n                </NavDropdown.Item>\n              )}\n            </NavDropdown>\n          </Nav>\n        )}\n\n        {!isEmpty(user) && <VisibilityFilterInput />}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nGlobalNavbar.propTypes = {\n  user: PropTypes.any\n};\n\nexport { GlobalNavbar };\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Footer = props => {\n  return (\n    <div>\n      Footer bro{' '}\n      <span aria-label=\"emoji\" role=\"img\">\n        🍿\n      </span>\n    </div>\n  );\n};\n\n// Footer.propTypes = {};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\n\nimport { WelcomeView } from '../welcome-view/welcome-view';\nimport { DirectorView } from '../../Movie/director-view/director-view';\nimport { GenreView } from '../../Movie/genre-view/genre-view';\nimport { MovieView } from '../../Movie/movie-view/movie-view';\nimport MoviesList from '../../Movie/movies-list/movies-list';\nimport ProfileView from '../../User/profile-view/profile-view';\n\nimport { movieApi } from '../../../helpers/movieAPI';\nimport { isEmpty } from '../../../helpers/isEmpty';\n\nimport './main-view.scss';\nimport UserList from '../../Users/users-list';\nimport { GlobalNavbar } from '../../GlobalComponents/global-navbar';\nimport Footer from '../../GlobalComponents/footer';\n// import ToastMessage from '../../ReusableComponents/toast-message/toast-message';\nimport AlertView from '../../ReusableComponents/alert-view/alert-view';\nimport { setMovies, setUser, setUsers } from '../../../redux/actions/actions';\n\nimport Row from 'react-bootstrap/Row';\n\nconst mapState = ({ movies, user, users }) => ({\n  movies,\n  user,\n  users\n});\n\nconst actions = { setMovies, setUser, setUsers };\n\nclass MainView extends Component {\n  state = {\n    selectedMovie: null,\n    modalShow: {\n      login: false,\n      register: false\n    },\n    toastMessage: {\n      type: '',\n      show: false\n    }\n  };\n\n  async componentDidMount() {\n    try {\n      let accessToken = await localStorage.getItem('token');\n      if (accessToken !== null) {\n        await this.getUser(accessToken);\n        await this.getMovies(accessToken);\n        await this.getUsers(accessToken);\n      }\n    } catch (error) {\n      console.log('componentDidMount', error);\n    }\n  }\n\n  async getUser(token) {\n    try {\n      let username = await localStorage.getItem('user');\n      let getUser = await axios.get(`${movieApi['user']}/${username}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      const { status, data } = getUser;\n      if (status === 201) {\n        this.props.setUser(data);\n      }\n    } catch (error) {\n      console.log('getUsers', error);\n    }\n  }\n\n  async getMovies(token) {\n    try {\n      let getMovies = await axios.get(movieApi['movies'], {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      const { status, data } = getMovies; // returns an array of movies\n      // console.warn(data);\n      if (status === 201) {\n        this.props.setMovies(data);\n        // this.setState({\n        //   movies: data\n        // });\n      }\n    } catch (error) {\n      console.log('getMovies', error);\n    }\n  }\n\n  async getUsers(token) {\n    try {\n      let getUsers = await axios.get(movieApi['users'], {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      const { status, data } = getUsers;\n      if (status === 201) {\n        this.props.setUsers(data);\n      }\n    } catch (error) {\n      console.log('getUsers', error);\n    }\n  }\n\n  onLoggedIn = authData => {\n    this.props.setUser(authData.user);\n    this.setState(\n      {\n        toastMessage: {\n          type: 'success',\n          show: true\n        }\n      },\n      () => {\n        localStorage.setItem('token', authData.token);\n        localStorage.setItem('user', authData.user.Username);\n        this.getMovies(authData.token);\n        this.getUsers(authData.token);\n        setTimeout(\n          () =>\n            this.setState({\n              toastMessage: {\n                show: false\n              }\n            }),\n          3000\n        );\n      }\n    );\n  };\n\n  onRegister = () => {\n    setTimeout(this.onModalClose('register'), 0);\n    setTimeout(this.onModalShow('login'), 0);\n  };\n\n  onLoggedOut = () => {\n    // temp logout method\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setTimeout(() => (window.location.href = '/myFlixApp'), 0);\n  };\n\n  onModalClose = component => () => {\n    component === 'login' && this.setState({ modalShow: { login: false } });\n    component === 'register' &&\n      this.setState({ modalShow: { register: false } });\n  };\n  onModalShow = component => () => {\n    component === 'login' && this.setState({ modalShow: { login: true } });\n    component === 'register' &&\n      this.setState({ modalShow: { register: true } });\n  };\n\n  render() {\n    const { modalShow, toastMessage } = this.state;\n    const { movies, users, user } = this.props;\n\n    return (\n      <Router>\n        <Container>\n          <GlobalNavbar user={user} onLoggedOut={this.onLoggedOut} />\n          <div className=\"main-view\">\n            <Route\n              exact\n              path=\"/myFlixApp\"\n              render={() => (\n                <WelcomeView\n                  user={user}\n                  modalShow={modalShow}\n                  onModalClose={this.onModalClose}\n                  onModalShow={this.onModalShow}\n                  onRegister={this.onRegister}\n                  onLoggedIn={this.onLoggedIn}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/movies\"\n              render={() =>\n                isEmpty(movies) ? (\n                  <div className=\"loading-view\">\n                    <p>Loading movies...</p>\n                  </div>\n                ) : (\n                  <MoviesList />\n                )\n              }\n            />\n\n            <Route\n              path=\"/movies/:movieId\"\n              render={({ match }) =>\n                isEmpty(movies) ? (\n                  <div className=\"loading-view\">\n                    <p>Loading the movie...</p>\n                  </div>\n                ) : (\n                  <MovieView\n                    movie={movies.find(m => m._id === match.params.movieId)}\n                  />\n                )\n              }\n            />\n            <Route\n              path=\"/directors/:name\"\n              render={({ match }) => {\n                if (isEmpty(movies))\n                  return (\n                    <div className=\"loading-view\">\n                      <p>Loading the director...</p>\n                    </div>\n                  );\n                return (\n                  <DirectorView\n                    movie={movies.find(\n                      m => m.Director.Name === match.params.name\n                    )}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/genres/:name\"\n              render={({ match }) => {\n                if (isEmpty(movies))\n                  return (\n                    <div className=\"loading-view\">\n                      <p>Loading the genres...</p>\n                    </div>\n                  );\n                return (\n                  <GenreView\n                    movie={movies.find(m => m.Genre.Name === match.params.name)}\n                  />\n                );\n              }}\n            />\n\n            <Route\n              path=\"/users\"\n              render={() => {\n                if (isEmpty(users))\n                  return (\n                    <div className=\"loading-view\">\n                      <p>You must be logged in to view users list.</p>\n                    </div>\n                  );\n                return <UserList users={users} />;\n              }}\n            />\n\n            <Route\n              path=\"/profile/:username\"\n              render={({ match }) => {\n                if (isEmpty(user))\n                  return (\n                    <div className=\"loading-view\">\n                      <p>Login to view your profile.</p>\n                    </div>\n                  );\n                return (\n                  <ProfileView\n                    user={\n                      user === match.params.username\n                        ? user\n                        : users &&\n                          users.find(u => u.Username === match.params.username)\n                    }\n                  />\n                );\n              }}\n            />\n\n            <Row>\n              {/* toast coming in next release */}\n              {/* {toastMessage.show && (\n                <ToastMessage\n                  showToast={toastMessage.show}\n                  variant={toastMessage.type}\n                >\n                  {toastMessage.type === 'success' && 'Success!'}\n                  {toastMessage.type === 'danger' && 'Something went wrong.'}\n                </ToastMessage>\n              )} */}\n              <Footer />\n              {toastMessage.show && (\n                <AlertView position=\"absolute\" variant={toastMessage.type}>\n                  {toastMessage.type === 'success' && 'Success!'}\n                </AlertView>\n              )}\n            </Row>\n          </div>\n        </Container>\n      </Router>\n    );\n  }\n}\n// connect(mapStateToProps, mapDispatchToProps, mergeProps, options)\nexport default connect(\n  mapState,\n  actions\n)(MainView);\n","import React, { Component } from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport moviesApp from './redux/reducers/reducers';\nimport MainView from './components/LandingPages/main-view/main-view';\n\nimport './App.css';\n\nconst store = createStore(moviesApp);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainView />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}